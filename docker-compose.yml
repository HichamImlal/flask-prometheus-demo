version: '3.8'

services:
  # Flask App (with intentional vulnerabilities)
  flask-app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DB_PASSWORD=admin123  # For secrets detection demo
    volumes:
      - .:/app

  # Prometheus (for metrics, optional)
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  # Grafana (for dashboards, optional)
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

  # SonarQube (static code analysis)
  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions

  # OWASP Dependency-Check (vulnerable dependencies)
  dependency-check:
    image: owasp/dependency-check
    volumes:
      - ./:/src
      - ./odc-reports:/report
    command:
      - '--scan'
      - '/src'
      - '--project'
      - 'flask-demo'
      - '--format'
      - 'HTML'
      - '--out'
      - '/report'

  # Trivy (container vulnerability scanning)
  trivy:
    image: aquasec/trivy
    command:
      - 'image'
      - '--severity'
      - 'CRITICAL'
      - 'flask-app'
    depends_on:
      - flask-app

  # Snyk (requires API token via environment variable)
  snyk:
    image: snyk/snyk:python
    environment:
      - SNYK_TOKEN=${SNYK_TOKEN}  # Pass your token via .env file
    volumes:
      - .:/project
    command:
      - 'test'
      - '--file=requirements.txt'

volumes:
  grafana-storage:
  sonarqube_data:
  sonarqube_extensions: